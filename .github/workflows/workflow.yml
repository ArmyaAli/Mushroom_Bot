# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: bot build 

on:
  push:
    branches: [ main ]

jobs:
#   build:
#     name: build the bot
#     runs-on: ubuntu-latest
#     env:
#       BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
#     steps:
#     - name: Checkout Repo
#       uses: actions/checkout@v2
#     - name: Grab Node 14
#       uses: actions/setup-node@v2
#       with: 
#         node-version: '14'
#     - name: clean install
#       run: npm ci
#     - name: create .env file
#       run: touch .env &&  echo $BOT_TOKEN >> .env
#     - name: build
#       run: npm run build --if-present
#     - name: ringos command
#       run: echo "Hello ringo"
      
#   docker:
#     name: build and push to DockerHub
#     runs-on: ubuntu-latest
#     needs: build
#     env:
#       BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
#       DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#       DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}  
#     steps:
#         - name: Checkout Repo
#           uses: actions/checkout@v2
#         - name: Create .env file
#           run: touch .env &&  echo $BOT_TOKEN >> .env
#         - name: Docker Build Image
#           run: docker build -t mushroombot:latest .
#         - name: Login & Push
#           run: |
#             echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
#             docker tag mushroombot:latest lordmushroom/mushroombot:latest
#             docker push lordmushroom/mushroombot:latest
            
  AWS-Deploy:
    runs-on: ubuntu-latest
#     needs: docker
    env:
      ENDPOINT: ${{ secrets.INSTANCE_ENDPOINT }}
      AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_ID }} 
      AWS_SECRET: ${{ secrets.AWS_SECRET }}  
      AWS_INSTANCE_ID: ${{ secrets.AWS_INSTANCE_ID }}
      AWS_ZONE: ${{ secrets.AWS_ZONE }}
      AWS_OS: ${{ secrets.AWS_OS_USER }}
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}    
    steps:
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      - name: test CLI
        run: aws --version
      - name: SET AWS CREDENTIALS
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_ID
          aws configure set aws_secret_access_key $AWS_SECRET
          aws configure set default.region us-east-2 
          aws configure list
      - name: Create SSH Keypair
        run: ssh-keygen -t rsa -f temp_key
      - name: Send Key to AWS Server
        run: |
          aws ec2-instance-connect send-ssh-public-key --instance-id $AWS_INSTANCE_ID --availability-zone $AWS_ZONE --instance-os-user $AWS_OS --ssh-public-key file://temp_key.pub
      - name: SSH to AWS INSTANCE
        run: |
          ssh -tt -o StrictHostKeyChecking=no -i temp_key $AWS_OS@$ENDPOINT
#       - name: Docker Login
#         run: |
#           echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
#       - name: Docker Pull
#         run: docker pull lordmushroom/mushroombot:latest
#       - name: Docker Run
#         run: ls -l
      

        
        
        
        
        
        
      
